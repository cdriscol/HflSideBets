// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1.FantasyFootballMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class FantasyFootballMap
    {
        
        /// <summary>
        /// AssertAwayTeamScore - Use 'AssertAwayTeamScoreExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAwayTeamScore()
        {
            #region Variable Declarations
            HtmlDiv awayScorePane = this.UIBridgeBuildersvsFuzzWindow.UIBridgeBuildersvsFuzzDocument.UIContentPane.AwayScorePane;
            #endregion

            // Verify that the 'InnerText' property of '134.2' pane equals '134.2'
            Assert.AreEqual(this.AssertAwayTeamScoreExpectedValues.AwayScorePaneInnerText, awayScorePane.InnerText);
        }
        
        /// <summary>
        /// AssertHomeAwayPts - Use 'AssertHomeAwayPtsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertHomeAwayPts()
        {
            #region Variable Declarations
            HtmlCell awayDefPtsCell = this.UIBridgeBuildersvsFuzzWindow.UIBridgeBuildersvsFuzzDocument.UIPlayertable_2Table.AwayDefPtsCell;
            #endregion

            // Verify that the 'InnerText' property of '11' cell equals '11'
            Assert.AreEqual(this.AssertHomeAwayPtsExpectedValues.AwayDefPtsCellInnerText, awayDefPtsCell.InnerText);
        }
        
        /// <summary>
        /// AssertHomeDefPts - Use 'AssertHomeDefPtsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertHomeDefPts()
        {
            #region Variable Declarations
            HtmlCell homeDefPtsCell = this.UIBridgeBuildersvsFuzzWindow.UIBridgeBuildersvsFuzzDocument.UIPlayertable_0Table.HomeDefPtsCell;
            #endregion

            // Verify that the 'InnerText' property of '-2' cell equals '-2'
            Assert.AreEqual(this.AssertHomeDefPtsExpectedValues.HomeDefPtsCellInnerText, homeDefPtsCell.InnerText);
        }
        
        /// <summary>
        /// AssertHomeTeamScore - Use 'AssertHomeTeamScoreExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertHomeTeamScore()
        {
            #region Variable Declarations
            HtmlDiv homeScorePane = this.UIBridgeBuildersvsFuzzWindow.UIBridgeBuildersvsFuzzDocument.UIContentPane.HomeScorePane;
            #endregion

            // Verify that the 'InnerText' property of '100.1' pane equals '100.1'
            Assert.AreEqual(this.AssertHomeTeamScoreExpectedValues.HomeScorePaneInnerText, homeScorePane.InnerText);
        }
        
        /// <summary>
        /// NavigateToQuickBoxScore - Use 'NavigateToQuickBoxScoreParams' to pass parameters into this method.
        /// </summary>
        public void NavigateToQuickBoxScore()
        {
            #region Variable Declarations
            BrowserWindow uIBridgeBuildersatChunWindow = this.UIBridgeBuildersatChunWindow;
            #endregion

            // Go to web page 'http://games.espn.go.com/ffl/boxscorequick?leagueId=481687&teamId=1&scoringPeriodId=14&seasonId=2013&view=scoringperiod&version=quick'
            uIBridgeBuildersatChunWindow.NavigateToUrl(new System.Uri(this.NavigateToQuickBoxScoreParams.UIBridgeBuildersatChunWindowUrl));
        }
        
        #region Properties
        public virtual AssertAwayTeamScoreExpectedValues AssertAwayTeamScoreExpectedValues
        {
            get
            {
                if ((this.mAssertAwayTeamScoreExpectedValues == null))
                {
                    this.mAssertAwayTeamScoreExpectedValues = new AssertAwayTeamScoreExpectedValues();
                }
                return this.mAssertAwayTeamScoreExpectedValues;
            }
        }
        
        public virtual AssertHomeAwayPtsExpectedValues AssertHomeAwayPtsExpectedValues
        {
            get
            {
                if ((this.mAssertHomeAwayPtsExpectedValues == null))
                {
                    this.mAssertHomeAwayPtsExpectedValues = new AssertHomeAwayPtsExpectedValues();
                }
                return this.mAssertHomeAwayPtsExpectedValues;
            }
        }
        
        public virtual AssertHomeDefPtsExpectedValues AssertHomeDefPtsExpectedValues
        {
            get
            {
                if ((this.mAssertHomeDefPtsExpectedValues == null))
                {
                    this.mAssertHomeDefPtsExpectedValues = new AssertHomeDefPtsExpectedValues();
                }
                return this.mAssertHomeDefPtsExpectedValues;
            }
        }
        
        public virtual AssertHomeTeamScoreExpectedValues AssertHomeTeamScoreExpectedValues
        {
            get
            {
                if ((this.mAssertHomeTeamScoreExpectedValues == null))
                {
                    this.mAssertHomeTeamScoreExpectedValues = new AssertHomeTeamScoreExpectedValues();
                }
                return this.mAssertHomeTeamScoreExpectedValues;
            }
        }
        
        public virtual NavigateToQuickBoxScoreParams NavigateToQuickBoxScoreParams
        {
            get
            {
                if ((this.mNavigateToQuickBoxScoreParams == null))
                {
                    this.mNavigateToQuickBoxScoreParams = new NavigateToQuickBoxScoreParams();
                }
                return this.mNavigateToQuickBoxScoreParams;
            }
        }
        
        public UINigsandJigsBridgeBuiWindow UINigsandJigsBridgeBuiWindow
        {
            get
            {
                if ((this.mUINigsandJigsBridgeBuiWindow == null))
                {
                    this.mUINigsandJigsBridgeBuiWindow = new UINigsandJigsBridgeBuiWindow();
                }
                return this.mUINigsandJigsBridgeBuiWindow;
            }
        }
        
        public UIBridgeBuildersatChunWindow UIBridgeBuildersatChunWindow
        {
            get
            {
                if ((this.mUIBridgeBuildersatChunWindow == null))
                {
                    this.mUIBridgeBuildersatChunWindow = new UIBridgeBuildersatChunWindow();
                }
                return this.mUIBridgeBuildersatChunWindow;
            }
        }
        
        public UIBridgeBuildersvsFuzzWindow UIBridgeBuildersvsFuzzWindow
        {
            get
            {
                if ((this.mUIBridgeBuildersvsFuzzWindow == null))
                {
                    this.mUIBridgeBuildersvsFuzzWindow = new UIBridgeBuildersvsFuzzWindow();
                }
                return this.mUIBridgeBuildersvsFuzzWindow;
            }
        }
        
        public UIHawkeyeFootballLeaguWindow UIHawkeyeFootballLeaguWindow
        {
            get
            {
                if ((this.mUIHawkeyeFootballLeaguWindow == null))
                {
                    this.mUIHawkeyeFootballLeaguWindow = new UIHawkeyeFootballLeaguWindow();
                }
                return this.mUIHawkeyeFootballLeaguWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertAwayTeamScoreExpectedValues mAssertAwayTeamScoreExpectedValues;
        
        private AssertHomeAwayPtsExpectedValues mAssertHomeAwayPtsExpectedValues;
        
        private AssertHomeDefPtsExpectedValues mAssertHomeDefPtsExpectedValues;
        
        private AssertHomeTeamScoreExpectedValues mAssertHomeTeamScoreExpectedValues;
        
        private NavigateToQuickBoxScoreParams mNavigateToQuickBoxScoreParams;
        
        private UINigsandJigsBridgeBuiWindow mUINigsandJigsBridgeBuiWindow;
        
        private UIBridgeBuildersatChunWindow mUIBridgeBuildersatChunWindow;
        
        private UIBridgeBuildersvsFuzzWindow mUIBridgeBuildersvsFuzzWindow;
        
        private UIHawkeyeFootballLeaguWindow mUIHawkeyeFootballLeaguWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAwayTeamScore'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertAwayTeamScoreExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '134.2' pane equals '134.2'
        /// </summary>
        public string AwayScorePaneInnerText = "134.2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertHomeAwayPts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertHomeAwayPtsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '11' cell equals '11'
        /// </summary>
        public string AwayDefPtsCellInnerText = "11";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertHomeDefPts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertHomeDefPtsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '-2' cell equals '-2'
        /// </summary>
        public string HomeDefPtsCellInnerText = "-2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertHomeTeamScore'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertHomeTeamScoreExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '100.1' pane equals '100.1'
        /// </summary>
        public string HomeScorePaneInnerText = "100.1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigateToQuickBoxScore'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class NavigateToQuickBoxScoreParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://games.espn.go.com/ffl/boxscorequick?leagueId=481687&teamId=1&scoringPeriodId=14&seasonId=2013&view=scoringperiod&version=quick'
        /// </summary>
        public string UIBridgeBuildersatChunWindowUrl = "http://games.espn.go.com/ffl/boxscorequick?leagueId=481687&teamId=1&scoringPeriod" +
            "Id=14&seasonId=2013&view=scoringperiod&version=quick";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINigsandJigsBridgeBuiWindow : BrowserWindow
    {
        
        public UINigsandJigsBridgeBuiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Free Fantasy Football - ESPN";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Free Fantasy Football - ESPN");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UINigsandJigsBridgeBuiDocument UINigsandJigsBridgeBuiDocument
        {
            get
            {
                if ((this.mUINigsandJigsBridgeBuiDocument == null))
                {
                    this.mUINigsandJigsBridgeBuiDocument = new UINigsandJigsBridgeBuiDocument(this);
                }
                return this.mUINigsandJigsBridgeBuiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UINigsandJigsBridgeBuiDocument mUINigsandJigsBridgeBuiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINigsandJigsBridgeBuiDocument : HtmlDocument
    {
        
        public UINigsandJigsBridgeBuiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Nigs and Jigs Bridge Builders - Free Fantasy Football - ESPN";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ffl/clubhouse";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://games.espn.go.com/ffl/clubhouse?leagueId=481687&teamId=1&seasonId=2013";
            this.WindowTitles.Add("Nigs and Jigs Bridge Builders - Free Fantasy Football - ESPN");
            #endregion
        }
        
        #region Properties
        public UIGamestabsCustom UIGamestabsCustom
        {
            get
            {
                if ((this.mUIGamestabsCustom == null))
                {
                    this.mUIGamestabsCustom = new UIGamestabsCustom(this);
                }
                return this.mUIGamestabsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGamestabsCustom mUIGamestabsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGamestabsCustom : HtmlCustom
    {
        
        public UIGamestabsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "games-tabs";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "UL";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"games-tabs\"";
            this.FilterProperties["TagInstance"] = "4";
            this.WindowTitles.Add("Nigs and Jigs Bridge Builders - Free Fantasy Football - ESPN");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIScoreboardHyperlink
        {
            get
            {
                if ((this.mUIScoreboardHyperlink == null))
                {
                    this.mUIScoreboardHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIScoreboardHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIScoreboardHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIScoreboardHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIScoreboardHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Scoreboard";
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ffl/scoreboard";
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://games.espn.go.com/ffl/scoreboard?leagueId=481687&seasonId=2013";
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/ffl/scoreboard?leagueId=481687&am";
                    this.mUIScoreboardHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIScoreboardHyperlink.WindowTitles.Add("Nigs and Jigs Bridge Builders - Free Fantasy Football - ESPN");
                    #endregion
                }
                return this.mUIScoreboardHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIScoreboardHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBridgeBuildersatChunWindow : BrowserWindow
    {
        
        public UIBridgeBuildersatChunWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Bridge Builders at Chunderniblets Box Score: Round 1 - Free Fantasy Football - ES" +
                "PN";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Bridge Builders at Chunderniblets Box Score: Round 1 - Free Fantasy Football - ES" +
                    "PN");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBridgeBuildersvsFuzzWindow : BrowserWindow
    {
        
        public UIBridgeBuildersvsFuzzWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIBridgeBuildersvsFuzzDocument UIBridgeBuildersvsFuzzDocument
        {
            get
            {
                if ((this.mUIBridgeBuildersvsFuzzDocument == null))
                {
                    this.mUIBridgeBuildersvsFuzzDocument = new UIBridgeBuildersvsFuzzDocument(this);
                }
                return this.mUIBridgeBuildersvsFuzzDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIBridgeBuildersvsFuzzDocument mUIBridgeBuildersvsFuzzDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIBridgeBuildersvsFuzzDocument : HtmlDocument
    {
        
        public UIBridgeBuildersvsFuzzDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ffl/boxscorequick";
            #endregion
        }
        
        #region Properties
        public UIPlayertable_0Table UIPlayertable_0Table
        {
            get
            {
                if ((this.mUIPlayertable_0Table == null))
                {
                    this.mUIPlayertable_0Table = new UIPlayertable_0Table(this);
                }
                return this.mUIPlayertable_0Table;
            }
        }
        
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        
        public UIPlayertable_2Table UIPlayertable_2Table
        {
            get
            {
                if ((this.mUIPlayertable_2Table == null))
                {
                    this.mUIPlayertable_2Table = new UIPlayertable_2Table(this);
                }
                return this.mUIPlayertable_2Table;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayertable_0Table mUIPlayertable_0Table;
        
        private UIContentPane mUIContentPane;
        
        private UIPlayertable_2Table mUIPlayertable_2Table;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPlayertable_0Table : HtmlTable
    {
        
        public UIPlayertable_0Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "playertable_0";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"playerTableTable tableBody\" id=\"p";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "12";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "playerTableTable tableBody";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "2";
            #endregion
        }
        
        #region Properties
        public HtmlCell HomeDefPtsCell
        {
            get
            {
                if ((this.mHomeDefPtsCell == null))
                {
                    this.mHomeDefPtsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mHomeDefPtsCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mHomeDefPtsCell.SearchProperties[HtmlCell.PropertyNames.Class] = "playertableStat appliedPoints appliedPointsProGameFinal";
                    this.mHomeDefPtsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"playertableStat appliedPoints app";
                    this.mHomeDefPtsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "10";
                    this.mHomeDefPtsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mHomeDefPtsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "46";
                    this.mHomeDefPtsCell.WindowTitles.Add("Bridge Builders vs Fuzz Box Score: Week 1 - Free Fantasy Football - ESPN");
                    #endregion
                }
                return this.mHomeDefPtsCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mHomeDefPtsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "container";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container\" id=\"content\"";
            #endregion
        }
        
        #region Properties
        public HtmlDiv HomeScorePane
        {
            get
            {
                if ((this.mHomeScorePane == null))
                {
                    this.mHomeScorePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mHomeScorePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "danglerBox totalScore";
                    this.mHomeScorePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "56";
                    #endregion
                }
                return this.mHomeScorePane;
            }
        }
        
        public HtmlDiv AwayScorePane
        {
            get
            {
                if ((this.mAwayScorePane == null))
                {
                    this.mAwayScorePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mAwayScorePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "danglerBox totalScore";
                    this.mAwayScorePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15055";
                    #endregion
                }
                return this.mAwayScorePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mHomeScorePane;
        
        private HtmlDiv mAwayScorePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPlayertable_2Table : HtmlTable
    {
        
        public UIPlayertable_2Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "playertable_2";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"playerTableTable tableBody\" id=\"p";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "12";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "1";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "playerTableTable tableBody";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "4";
            #endregion
        }
        
        #region Properties
        public HtmlCell AwayDefPtsCell
        {
            get
            {
                if ((this.mAwayDefPtsCell == null))
                {
                    this.mAwayDefPtsCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mAwayDefPtsCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mAwayDefPtsCell.SearchProperties[HtmlCell.PropertyNames.Class] = "playertableStat appliedPoints appliedPointsProGameFinal";
                    this.mAwayDefPtsCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"playertableStat appliedPoints app";
                    this.mAwayDefPtsCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "10";
                    this.mAwayDefPtsCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "4";
                    this.mAwayDefPtsCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "46";
                    #endregion
                }
                return this.mAwayDefPtsCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mAwayDefPtsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHawkeyeFootballLeaguWindow : BrowserWindow
    {
        
        public UIHawkeyeFootballLeaguWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            //this.WindowTitles.Add("Free Fantasy Football - ESPN");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHawkeyeFootballLeaguDocument UIHawkeyeFootballLeaguDocument
        {
            get
            {
                if ((this.mUIHawkeyeFootballLeaguDocument == null))
                {
                    this.mUIHawkeyeFootballLeaguDocument = new UIHawkeyeFootballLeaguDocument(this);
                }
                return this.mUIHawkeyeFootballLeaguDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHawkeyeFootballLeaguDocument mUIHawkeyeFootballLeaguDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIHawkeyeFootballLeaguDocument : HtmlDocument
    {
        
        public UIHawkeyeFootballLeaguDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public UIContentPane1 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane1(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane1 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIContentPane1 : HtmlDiv
    {
        
        public UIContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "container";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container\" id=\"content\"";
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem1Hyperlink
        {
            get
            {
                if ((this.mUIItem1Hyperlink == null))
                {
                    this.mUIItem1Hyperlink = new HtmlHyperlink(this);
                }
                return this.mUIItem1Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem1Hyperlink;
        #endregion
    }
}
